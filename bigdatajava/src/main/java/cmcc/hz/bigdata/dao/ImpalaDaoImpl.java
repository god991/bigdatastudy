package cmcc.hz.bigdata.dao;import cmcc.hz.bigdata.pojo.UserPersona;import org.springframework.stereotype.Service;import java.lang.reflect.Field;import java.sql.*;import java.util.ArrayList;import java.util.List;/** * @program: bigdata * @description: * @author: liminjie * @create: 2018-06-20 13:55 * 填写的Impala地址一定是impala的Daemon地址，不一定是master **/@Servicepublic class ImpalaDaoImpl implements ImpalaDao{    static String DRIVER = "com.cloudera.impala.jdbc41.Driver";    static String URL = "jdbc:impala://192.168.50.2:21050/";    Connection conn = null;    ResultSet rs = null;    PreparedStatement pst = null;    public ImpalaDaoImpl() throws Exception {    }    private boolean connectToDB(){        try {            Class.forName(DRIVER);            conn = DriverManager.getConnection(URL);        } catch (Exception e) {            e.printStackTrace();            return  false;        }        return true;    }    private void disConnect() {        if(conn!=null){            try {                conn.close();                pst.close();            } catch (SQLException e) {                // TODO Auto-generated catch block                e.printStackTrace();            }}    }    @Override    public List<Object> getImpalaData(String sql, Class cls) {        if(conn==null){            if(!this.connectToDB())                return null;        }        List<Object> objectList=new ArrayList();        try {            pst = conn.prepareStatement(sql);            //防止把代码写死            //pst.setString(1,acc_nbr);            rs = pst.executeQuery();            while(rs.next()) {                //将数据转换为类对象，传给上层                objectList.add(rsToObjec(rs,cls));            }        } catch (Exception e) {            e.printStackTrace();        }finally {            //this.disConnect();        }        return  objectList;    }    @Override    public UserPersona getAppPersonaByAcc_nbr(String acc_nbr){        String sql="select * from bigdataapp.tb_comm_app_persona2 where acc_nbr=?";        UserPersona userPersona=null;        if(conn==null){            if(!this.connectToDB())                return null;        }        try {            pst = conn.prepareStatement(sql);            //防止把代码写死            pst.setString(1,acc_nbr);            rs = pst.executeQuery();            if(rs.next()) {                //将数据转换为类对象，传给上层                userPersona= (UserPersona)rsToObjec(rs,UserPersona.class);            }        } catch (Exception e) {            e.printStackTrace();        }finally {            //this.disConnect();        }        return  userPersona;    }    /**     * 将数据库列转换为java对象     * 从数据库的记录中取出每一列，根据列名称将值赋给java对象属性     * @param rs     * @return     */    private Object rsToObjec(ResultSet rs,Class cls) throws Exception{        //创建对象        Object obj=cls.newInstance();        //获取类的属性信息，属性作为对象存储在fs中        Field []fs=cls.getDeclaredFields();//        for(int i=0;i<fs.length;i++){            Field f= fs[i];            String type = f.getType().getName().toString();//int            String name=f.getName();//age            if(type.equals("int")){                f.set(obj,rs.getInt(name));            }else if(type.equals("java.lang.String")){                //String acc=rs.getString(name);                f.set(obj,rs.getString(name));            }else if(type.equals("float")){                f.set(obj,rs.getFloat(name));            }else if(type.equals("double")){                f.set(obj,rs.getDouble(name));            }        }        return  obj;    }}